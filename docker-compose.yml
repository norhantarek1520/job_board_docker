version: "3"

services:
# # ##==================================================jobs=============================================================================
  jobs_db:
    image: mongo:3.6.19-xenial
    container_name: jobs_db

    networks:
      - jobboard-app
    volumes:
      - job-data:/data/db
 
  jobs_service:
    build: ./jobs_service
    container_name: jobs_service_container
    ports:
      - "5001:5001"
    networks:
      - jobboard-app
    links:
      - jobs_db
    restart: on-failure
    depends_on:
      - jobs_db
    volumes:
      - ./jobs_service:/app
      - /app/node_modules  # Assuming Node.js application

##================================================recommend_service =================================================================
  
  recommend_service:
    build: ./recommend_service
    container_name: recommend_service_container
    ports:
      - "6004:6004"
    networks:
      - jobboard-app
    volumes:
      - ./recommend_service:/app
      - /app/node_modules

# ##==================================================applications=====================================================================
  applications_db:
    image: mongo:3.6.19-xenial
    container_name: applications_db

    networks:
      - jobboard-app
    volumes:
      - applications-data:/data/db

  applications_service:
    build: ./applications_service
    container_name: applications_service_container
    ports:
      - "5003:5003"
    networks:
      - jobboard-app
    links:
      - applications_db
    restart: on-failure
    depends_on:
      - applications_db
    volumes:
      - ./applications_service:/app
      - /app/node_modules  # Assuming Node.js application

##==================================================companies_service=======================================================================
  companies_db:
    image: mongo:3.6.19-xenial
    container_name: companies_db
    networks:
      - jobboard-app
    volumes:
      - companies-data:/data/db

  companies_service:
    build: ./companies_service
    container_name: companies_service_container
    ports:
      - "4000:4000"
    networks:
      - jobboard-app
    links:
      - companies_db
    restart: on-failure
    depends_on:
      - companies_db
    volumes:
      - ./companies_service:/app
      - /app/node_modules  # Assuming Node.js application

##==================================================client=====================================================================
  
  client:
    build: ./client
    container_name: client_container
    stdin_open: true
    ports:
      - "3000:3000"
    networks:
      - jobboard-app
    volumes:
      - ./client:/app
      - /app/node_modules

##==================================================categories=======================================================================
  categories_db:
    image: mongo:3.6.19-xenial
    container_name: categories_db
    networks:
      - jobboard-app
    volumes:
      - category-data:/data/db

  categories_service:
    build: ./categories_service
    container_name: categories_service_container
    ports:
      - "5000:5000"
    networks:
      - jobboard-app
    links:
      - categories_db
    restart: on-failure
    depends_on:
      - categories_db
    volumes:
      - ./categories_service:/app
      - /app/node_modules  # Assuming Node.js application


#================================================users ============================================================================
  # postgres:
  #   volumes:
  #     - postgres_dev_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_PASSWORD: developmentpassword
  #     POSTGRES_DB: developmentdb
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "postgres", "-d", "developmentdb"]
  
  # drf-app:
  #   container_name: dev-drf-running-app
  #   build: 
  #     target: development
  #   volumes:
  #     - ./VotingSystem:/app
  #   ports:
  #     - "8000:8000"
  #   command: bash -c "python manage.py makemigrations --settings=VotingSystem.settings.development && python manage.py migrate --settings=VotingSystem.settings.development && python manage.py runserver 0.0.0.0:8000 --settings=VotingSystem.settings.development"

##_____________________________________________________ (*_*) ___________________________________________________

networks:
  jobboard-app:
    driver: bridge  # Change to 'overlay' if needed

volumes:
  category-data:
  job-data:
  applications-data:
  companies-data:
  # postgres_dev_data:
