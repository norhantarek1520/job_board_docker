version: "3"

services:
  jobs_db:
    image: mongo:3.6.19-xenial
    container_name: jobs_db
    volumes:
      - job-data:/data/db
    networks:
      - jobboard-app
  jobs_service:
    build: ./jobs_service
    container_name: jobs_service_container
    ports:
      - "5001:5001"
    volumes:
      - ./jobs_service:/app
      - /app/node_modules  # Assuming Node.js application
    networks:
      - jobboard-app
    links:
      - jobs_db
    restart: on-failure
    depends_on:
      - jobs_db
   
  
  recommend_service:
    build: ./recommend_service
    container_name: recommend_service_container
    ports:
      - "6004:6004"
    volumes:
      - ./recommend_service:/app
      - /app/node_modules
    networks:
      - jobboard-app


  applications_db:
    image: mongo:3.6.19-xenial
    container_name: applications_db
    volumes:
      - applications-data:/data/db
    networks:
      - jobboard-app

  applications_service:
    build: ./applications_service
    container_name: applications_service_container
    ports:
      - "5003:5003"
    volumes:
      - ./applications_service:/app
      - /app/node_modules  # Assuming Node.js application
    networks:
      - jobboard-app
    links:
      - applications_db
    restart: on-failure
    depends_on:
      - applications_db


  companies_db:
    image: mongo:3.6.19-xenial
    container_name: companies_db
    volumes:
      - companies-data:/data/db
    networks:
      - jobboard-app
   
  companies_service:
    build: ./companies_service
    container_name: companies_service_container
    ports:
      - "8080:8080"
    volumes:
      - ./companies_service:/app
      - /app/node_modules  
    networks:
      - jobboard-app
    links:
      - companies_db
    restart: on-failure
    depends_on:
      - companies_db

  client:
    build: ./client
    container_name: client_container
    stdin_open: true
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - jobboard-app
    environment:
      - WATCHPACK_POLLING=true
  
  categories_db:
    image: mongo:3.6.19-xenial
    container_name: categories_db
    networks:
      - jobboard-app
    volumes:
      - category-data:/data/db
  categories_service:
    build: ./categories_service
    container_name: categories_service_container
    ports:
      - "5000:5000"
    volumes:
      - ./categories_service:/app
      - /app/node_modules  # Assuming Node.js application
    networks:
      - jobboard-app
    links:
      - categories_db
    restart: always
    depends_on:
      - categories_db

  postgres:
    container_name: drf-postgres
    image: postgres:16.2
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: developmentpassword
      POSTGRES_DB: developmentdb
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "developmentdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  drf-app:
    container_name: users_service
    build: ./users_service/.
    volumes:
      - ./users_service/VotingSystem:/app
    ports:
      - "8000:8000"
    command: bash -c "python manage.py makemigrations --settings=VotingSystem.settings.development && python manage.py migrate --settings=VotingSystem.settings.development && python manage.py runserver 0.0.0.0:8000 --settings=VotingSystem.settings.development"   
    env_file:
      - ./users_service/.env
    depends_on:
      postgres:
        condition: service_healthy

  adminer:
    image: adminer
    restart: always
    ports:
      - 8090:8080
    networks:
      - jobboard-app
    

networks:
  jobboard-app:
    driver: bridge  

volumes:
  category-data:
  job-data:
  applications-data:
  companies-data:
  postgres_dev_data:
  
